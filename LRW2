
loadstring(game:HttpGet("https://raw.githubusercontent.com/krymmirai/SaveProject/refs/heads/main/HideOpen",true))()
if not game:IsLoaded() then
    game.Loaded:Wait()
    end
    wait()

    function Teleportmap(P1)
        local Distance = (P1.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
        if Distance < 150 then
            Speed = 800
        elseif Distance < 200 then
            Speed = 800
        elseif Distance < 300 then
            Speed = 800
        elseif Distance < 500 then
            Speed = 800
        elseif Distance < 1000 then
            Speed = 800
        elseif Distance >= 1000 then
            Speed = 800
        end
        game:GetService("TweenService"):Create(
            game.Players.LocalPlayer.Character.HumanoidRootPart,
            TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),
            {CFrame = P1}
        ):Play()
        if _G.Stop_Tween==true then
            game:GetService("TweenService"):Create(
            game.Players.LocalPlayer.Character.HumanoidRootPart,
            TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),
                {CFrame = P1}
            ):Cancel()
        end
        _G.Clip = true
        wait(Distance/Speed)
        _G.Clip = false
    end
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()

--UI Library Window

local Window = Library.CreateLib(" Zero2 Hub / Legends Re:Written (World 2) ", "Midnight")
local status = Window:NewTab("status")
local Tab = Window:NewTab("Misc")
local Teleport2 = Window:NewTab("Teleport World 2")
local Del = Window:NewTab("Delete Item")
--Del Item
local delitem = Del:NewSection("test")

del:NewButton("creat place", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1, 290, 2)    
local baseplate = Instance.new("Part")
    baseplate.Parent = workspace
    baseplate.Size = Vector3.new(10,1,10)
    baseplate.Anchored = true
    baseplate.Name = "Baseplate"
    baseplate.Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0,-1,0)
end)
auto:NewButton("Pick Active", "ButtonInfo", function()
while task.wait() do
    game:GetService("Players").LocalPlayer.Character:WaitForChild("PickAxe"):WaitForChild("SwordScript"):WaitForChild("Activate"):FireServer()
end
end)

auto:NewToggle("Auto switch", "name", function(nameBB)
    getgenv().name = nameBB
    if nameBB then
        Pickactive();
    end
end)

function Pickactive()
    spawn(function()
        while name == true do
            local args = {[1] = 1}
game:GetService("Players").LocalPlayer.Character:WaitForChild("PickAxe"):WaitForChild("SwordScript"):WaitForChild("Activate"):FireServer()
            wait(0.)
        end
    end)
end

auto:NewToggle("Auto switch dragon stone", "name", function(nameF)
    getgenv().name = nameF
    if nameF then
        dash();
    end
end)

function dash()
    spawn(function()
        while name == true do
            local args = {[1] = 1}
                    Teleportmap(CFrame.new(-3645, -340, -482))
        wait(1.5)
        Teleportmap(CFrame.new(-3655, -338, -500))
        wait(1.5)
        Teleportmap(CFrame.new(-3652, -340, -547))
        wait(1.5)
        Teleportmap(CFrame.new(-3661, -339, -564))
        wait(1.5)
        Teleportmap(CFrame.new(-3577, -339, -611))
        wait(1.5)
        Teleportmap(CFrame.new(-3588, -340, -482))
            wait(1.5)
        end
    end)
end
auto:NewToggle("Auto Fish", "name", function(nameA)
    getgenv().name2 = nameA
    if nameA then
        fish();
    end
end)

function fish()
    spawn(function()
        while name2 == true do
            local args = {[1] = 1}
            while task.wait() do
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1, 290, 2) 
end
            wait(0.)
        end
    end)
end



--status
local stat = status:NewSection("Status")
stat:NewLabel("Name : ".. game.Players.LocalPlayer.Character.Name .." [Dev]")
stat:NewLabel("PlaceID : ".. game.PlaceId .."")
stat:NewButton("Copy PlaceId", "ButtonInfo", function()
    setclipboard(game.PlaceId)
end)
stat:NewLabel("JobID : ".. game.JobId .."")
stat:NewButton("Copy JobId", "ButtonInfo", function()
    setclipboard(game.JobId)
end)
stat:NewLabel("Script Make By SadThudatinh (Owner)")

stat:NewKeybind("KeybindText", "KeybindInfo", Enum.KeyCode.F6, function()
	Library:ToggleUI()
end)

--???
local write = Tab:NewSection("Misc")
write:NewButton("Bypass Holdbutton", "ButtonInfo", function()
for i, v in pairs(workspace:GetDescendants()) do
if v.ClassName == "ProximityPrompt" then
v.HoldDuration = 0
end
end
end)
write:NewToggle("Auto Dash", "name", function(nameF)
        getgenv().name = nameF
        if nameF then
            dash();
        end
    end)
    
    function dash()
        spawn(function()
            while name == true do
                local args = {[1] = 1}
                game:GetService("Players").LocalPlayer.PlayerGui.Parkour.Script.Dash:FireServer()
                wait(0)
            end
        end)
    end
write:NewButton("Delete Texture", "ButtonInfo", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/krymmirai/string-script/main/FpsV4",true))()
    end)

write:NewButton("Delete Grass", "ButtonInfo", function()
    local showDecorations = false -- set this to true if you want to see decorations again
    sethiddenproperty(game:GetService("Workspace").Terrain, "Decoration", showDecorations)
         end)
write:NewSlider("Speed", "Speed Hack", 500, 16, function(s) -- 500 (MaxValue) | 0 (MinValue)
        getgenv().WalkSpeedValue = s; 
    local Player = game:service'Players'.LocalPlayer;
    Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
    end)
    Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
    end)
write:NewButton("FullBright", "ButtonInfo", function()
    light()
end)
write:NewButton("Sever Hop", "ButtonInfo", function()
    Teleport()
    end)
write:NewButton("Get position", "ButtonInfo", function()
getposition()
end)
write:NewButton("Copy location", "ButtonInfo", function()
  local a = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

setclipboard(tostring(a))
end)
write:NewButton("Dark Dex", "ButtonInfo", function()
    loadstring(game:HttpGet("https://gist.githubusercontent.com/DinosaurXxX/b757fe011e7e600c0873f967fe427dc2/raw/ee5324771f017073fc30e640323ac2a9b3bfc550/dark%2520dex%2520v4"))()
end)





--Teleport
local tele = Teleport2:NewSection("Teleport Location World 2")
tele:NewLabel("Zoro 17h Anywhere / (Second Day)")
tele:NewButton("Teleport Lobby", "ButtonInfo", function()
    placeid = 6198225400  --change this to the place id you want
    tp = game:GetService('TeleportService')
    
    for i,v in pairs (game.Players:GetChildren()) do
        tp:Teleport(placeid, v)
    end
    end)
  tele:NewButton("Spawn", "ButtonInfo", function()
    Teleportmap(CFrame.new(148.04, 19.47, -268.38))
  end)
  tele:NewButton("Shibuya", "ButtonInfo", function()
    Teleportmap(CFrame.new(-2648.25, 57.93, 7040.06))
  end)
  tele:NewButton("Flower village", "ButtonInfo", function()
    Teleportmap(CFrame.new(4248.84, -155.29, 6417.84))
  end)
  tele:NewButton("Magma Island", "ButtonInfo", function()
    Teleportmap(CFrame.new(-4533.16, 20.04, 1632.27))
  end)
  tele:NewButton("Law 15h Summer / (First Day) ", "ButtonInfo", function()
    Teleportmap(CFrame.new(823.45, 19.47, -880.76))
  end)

  tele:NewButton("Kurumi 0h Summer / (First Day) ", "ButtonInfo", function()
    Teleportmap(CFrame.new(271.49, 889.63, 2766.97))
  end)

  tele:NewButton("Sky Island / (Fist Day)  ", "ButtonInfo", function()
    Teleportmap(CFrame.new(-6016.72, 1860.77, 4047.85))
  end)

  tele:NewButton("Mihak 12h Fall / (Fist Day)", "ButtonInfo", function()
    Teleportmap(CFrame.new(-1997.49, 168.99, 4831.95))
  end)

  tele:NewButton("Chains 3h  Spring / (Second Day)", "ButtonInfo", function()
    Teleportmap(CFrame.new(4857, 33.62, 7182.5))
  end)

  tele:NewButton("Abyss Knight 10h Fall / (Second Day)", "ButtonInfo", function()
    Teleportmap(CFrame.new(4514.8, -675.25, 6127.99))
  end)
-- position
function getposition()
local ScreenGui = Instance.new("ScreenGui")

local Frame = Instance.new("Frame")
local ImageLabel = Instance.new("ImageLabel")

function createButton()
local X = Instance.new("TextLabel")
X.Parent = ImageLabel
X.BackgroundColor3 = Color3.new(1, 1, 1)
X.BackgroundTransparency = 1
X.Size = UDim2.new(0.3, 0, 1, 0)
X.Font = Enum.Font.SourceSans
X.FontSize = Enum.FontSize.Size14
X.TextScaled = true
X.TextSize = 14
X.TextStrokeColor3 = Color3.new(1, 10, 1)
X.TextStrokeTransparency = 0
X.TextWrapped = true
return X
end

function round(val)
return math.floor( (val * 10^2) + 0.5) / (10^2)
end

local X = createButton()
local Y = createButton()
local Z = createButton()

ScreenGui.Parent = game.CoreGui

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.new(1, 1, 1)
Frame.BackgroundTransparency = 1
Frame.Size = UDim2.new(1, 0, 1, 0)
ImageLabel.Parent = Frame
ImageLabel.BackgroundColor3 = Color3.new(1, 1, 1)
ImageLabel.Size = UDim2.new(0.4, 0, 0.15, 0)
ImageLabel.Image = "rbxassetidUndecided/401491488"
Y.Position = UDim2.new(0.33, 0, 0, 0)
Z.Position = UDim2.new(0.66, 0, 0, 0)

while true do
X.Text = round(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.x)
Y.Text = round(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.y)
Z.Text = round(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.z)
wait()
end
end
--severhop
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
local File = pcall(function()
    AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end
function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end

function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end
--light
function light()
game:GetService"Lighting".FogEnd = 1000000
wait(0.1)
if not _G.FullBrightExecuted then

	_G.FullBrightEnabled = false

	_G.NormalLightingSettings = {
		Brightness = game:GetService("Lighting").Brightness,
		ClockTime = game:GetService("Lighting").ClockTime,
		FogEnd = game:GetService("Lighting").FogEnd,
		GlobalShadows = game:GetService("Lighting").GlobalShadows,
		Ambient = game:GetService("Lighting").Ambient
	}

	game:GetService("Lighting"):GetPropertyChangedSignal("Brightness"):Connect(function()
		if game:GetService("Lighting").Brightness ~= 1 and game:GetService("Lighting").Brightness ~= _G.NormalLightingSettings.Brightness then
			_G.NormalLightingSettings.Brightness = game:GetService("Lighting").Brightness
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").Brightness = 1
		end
	end)

	game:GetService("Lighting"):GetPropertyChangedSignal("ClockTime"):Connect(function()
		if game:GetService("Lighting").ClockTime ~= 12 and game:GetService("Lighting").ClockTime ~= _G.NormalLightingSettings.ClockTime then
			_G.NormalLightingSettings.ClockTime = game:GetService("Lighting").ClockTime
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").ClockTime = 12
		end
	end)

	game:GetService("Lighting"):GetPropertyChangedSignal("FogEnd"):Connect(function()
		if game:GetService("Lighting").FogEnd ~= 786543 and game:GetService("Lighting").FogEnd ~= _G.NormalLightingSettings.FogEnd then
			_G.NormalLightingSettings.FogEnd = game:GetService("Lighting").FogEnd
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").FogEnd = 786543
		end
	end)

	game:GetService("Lighting"):GetPropertyChangedSignal("GlobalShadows"):Connect(function()
		if game:GetService("Lighting").GlobalShadows ~= false and game:GetService("Lighting").GlobalShadows ~= _G.NormalLightingSettings.GlobalShadows then
			_G.NormalLightingSettings.GlobalShadows = game:GetService("Lighting").GlobalShadows
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").GlobalShadows = false
		end
	end)

	game:GetService("Lighting"):GetPropertyChangedSignal("Ambient"):Connect(function()
		if game:GetService("Lighting").Ambient ~= Color3.fromRGB(178, 178, 178) and game:GetService("Lighting").Ambient ~= _G.NormalLightingSettings.Ambient then
			_G.NormalLightingSettings.Ambient = game:GetService("Lighting").Ambient
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)
		end
	end)

	game:GetService("Lighting").Brightness = 1
	game:GetService("Lighting").ClockTime = 12
	game:GetService("Lighting").FogEnd = 786543
	game:GetService("Lighting").GlobalShadows = false
	game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)

	local LatestValue = true
	spawn(function()
		repeat
			wait()
		until _G.FullBrightEnabled
		while wait() do
			if _G.FullBrightEnabled ~= LatestValue then
				if not _G.FullBrightEnabled then
					game:GetService("Lighting").Brightness = _G.NormalLightingSettings.Brightness
					game:GetService("Lighting").ClockTime = _G.NormalLightingSettings.ClockTime
					game:GetService("Lighting").FogEnd = _G.NormalLightingSettings.FogEnd
					game:GetService("Lighting").GlobalShadows = _G.NormalLightingSettings.GlobalShadows
					game:GetService("Lighting").Ambient = _G.NormalLightingSettings.Ambient
				else
					game:GetService("Lighting").Brightness = 1
					game:GetService("Lighting").ClockTime = 12
					game:GetService("Lighting").FogEnd = 786543
					game:GetService("Lighting").GlobalShadows = false
					game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)
				end
				LatestValue = not LatestValue
			end
		end
	end)
end

_G.FullBrightExecuted = true
_G.FullBrightEnabled = not _G.FullBrightEnabled
end
