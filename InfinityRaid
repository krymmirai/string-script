if not game:IsLoaded() then
  game.Loaded:Wait()
  end
  wait()
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()

--UI Library Window

local Window = Library.CreateLib(" Zero2 Hub / Legends Re:Written (Infinity Raid) ", "Midnight")
local status = Window:NewTab("status")
local Tab = Window:NewTab("???")
local Teleport2 = Window:NewTab("Teleport")

--status
local stat = status:NewSection("Status")
stat:NewLabel("Name : ".. game.Players.LocalPlayer.Character.Name .." [Dev]")
stat:NewLabel("PlaceID : ".. game.PlaceId .."")
stat:NewButton("Copy PlaceId", "ButtonInfo", function()
  setclipboard(game.PlaceId)
end)
stat:NewLabel("JobID : ".. game.JobId .."")
stat:NewButton("Copy JobId", "ButtonInfo", function()
  setclipboard(game.JobId)
end)
stat:NewLabel("Script Make By SadThudatinh (Owner)")
stat:NewButton("Sever Hop", "ButtonInfo", function()
  Teleport()
end)
stat:NewButton("Dark Dex", "ButtonInfo", function()
  loadstring(game:HttpGet("https://gist.githubusercontent.com/DinosaurXxX/b757fe011e7e600c0873f967fe427dc2/raw/ee5324771f017073fc30e640323ac2a9b3bfc550/dark%2520dex%2520v4"))()
end)

stat:NewKeybind("KeybindText", "KeybindInfo", Enum.KeyCode.Backquote, function()
Library:ToggleUI()
end)

--???
local write = Tab:NewSection("find location")
write:NewButton("Copy location", "ButtonInfo", function()
local a = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

setclipboard(tostring(a))
end)
write:NewButton("Teleport Lobby", "ButtonInfo", function()
placeid = 6198225400  --change this to the place id you want
tp = game:GetService('TeleportService')

for i,v in pairs (game.Players:GetChildren()) do
    tp:Teleport(placeid, v)
end
end)
--Teleport
local tele = Teleport2:NewSection("Teleport")


tele:NewButton("Akaza", "ButtonInfo", function()
  tweenService, tweenInfo = game:GetService("TweenService"), TweenInfo.new(4, Enum.EasingStyle.Linear) --Change Time

tween = tweenService:Create(game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart, tweenInfo, {CFrame = CFrame.new(511.25, -346.88, 1460.78)})
tween:Play()
end)

tele:NewButton("Douma", "ButtonInfo", function()
  tweenService, tweenInfo = game:GetService("TweenService"), TweenInfo.new(4, Enum.EasingStyle.Linear) --Change Time

tween = tweenService:Create(game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart, tweenInfo, {CFrame = CFrame.new(-686.96, -136.77, 677.35)})
tween:Play()
end)

tele:NewButton("Elevator", "ButtonInfo", function()
  tweenService, tweenInfo = game:GetService("TweenService"), TweenInfo.new(4, Enum.EasingStyle.Linear) --Change Time

tween = tweenService:Create(game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart, tweenInfo, {CFrame = CFrame.new(896.69, 301.46, 235.3)})
tween:Play()
end)

tele:NewButton("Kokushibou", "ButtonInfo", function()
  tweenService, tweenInfo = game:GetService("TweenService"), TweenInfo.new(4, Enum.EasingStyle.Linear) --Change Time

tween = tweenService:Create(game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart, tweenInfo, {CFrame = CFrame.new(263.03, -425.08, 236.71)})
tween:Play()
end)
--severhop
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
local File = pcall(function()
    AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end
function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end

function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end
